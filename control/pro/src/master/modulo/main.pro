
main :-
    nl,
    write('Progetto della sessione autunnale del corso Programmazione Logica e Funzionale'), nl,
    write('Anno 2023/2024'), nl,
    write('Corso tenuto dal prof. Marco Bernardo'), nl,
    write('Progetto realizzato da: Barzotti Nicolas e Ramagnano Gabriele'), nl, nl, nl,

    write ('--------------------------------------------------------------------'), nl,
    write ('| Calcolo del moto fugoide senza attrito                           |'), nl,
    write ('| Parametri iniziali:                                              |'), nl,
    write ('| altitudine iniziale      = 100m,                                 |'), nl,
    write ('| velocita\'  iniziale       = 10m/s.                              |'), nl,
    write ('| Parametri di simulazione:                                        |'), nl,
    write ('| secondi di simulazione   = 100s,                                 |'), nl,
    write ('| costante gravitazionale  = 9.81m/(s^2).                          |'), nl,
    write ('| Parametro richiesto:                                             |'), nl,
    write ('| passo temporale, determina la distanza temporale                 |'), nl,
    write ('| tra due punti di simulazione, un valore basso                    |'), nl,
    write ('| permette una simulazione piu\' accurata                          |'), nl,
    write ('--------------------------------------------------------------------'), nl,

    write('Digita la lunghezza del passo temporale: '), nl,
    acquisisci_dato(DT),
    main_fugoide_semplice(DT, FS),
    mostra_dati_lista(FS),

    write ('--------------------------------------------------------------------'), nl,
    write ('| Calcolo del moto fugoide con attrito                             |'), nl,
    write ('| Parametri iniziali:                                              |'), nl,
    write ('| velocita\' iniziale                    = velocita\' di trim,     |'), nl,
    write ('| angolo iniziale                       = 0rad,                    |'), nl,
    write ('| spostamento laterale  iniziale        = 0m,                      |'), nl,
    write ('| spostamento verticale iniziale        = 1000m,                   |'), nl,
    write ('| Parametri di simulazione:                                        |'), nl,
    write ('| secondi di simulazione                = 100s,                    |'), nl,
    write ('| velocita\' di trim                     = 30m/s,                  |'), nl,
    write ('| costante gravitazionale               = 9.81m/(s^2),             |'), nl,
    write ('| coefficiente di resistenza dell aria  = 0.025,                   |'), nl,
    write ('| coefficiente di portanza              = 1N.                      |'), nl,
    write ('| Parametro richiesto:                                             |'), nl,
    write ('| passo temporale, determina la distanza temporale                 |'), nl,
    write ('| tra due punti di simulazione, un valore basso                    |'), nl,
    write ('| permette una simulazione piu\' accurata                          |'), nl,
    write ('--------------------------------------------------------------------'), nl,
    write('Digita la lunghezza del passo temporale: '), nl,
    acquisisci_dato(DT),
    main_fugoide_completo(DT, FC),
    mostra_dati_lista(FC),

    write ('--------------------------------------------------------------------'), nl,
    write ('| Calcolo dell\'equazione di convezione lineare a una dimensione   |'), nl,
    write ('| Parametri iniziali:                                              |'), nl,
    write ('| limite superiore del dominio spaziale    = 2.0,                  |'), nl,
    write ('| limite inferiore del dominio spaziale    = 0.0,                  |'), nl, 
    write ('| valore della parte alta della funzione   = 2.0,                  |'), nl, 
    write ('| valore della parte bassa della funzione  = 1.0.                  |'), nl,
    write ('| Parametri di simulazione:                                        |'), nl,
    write ('| numero di passi temporali da effettuare  = 25 ,                  |'), nl, 
    write ('| velocita\' dell\'onda                      = 1.0.                |'), nl, 
    write ('| Parametri richiesti all\'utente:                                 |'), nl, 
    write ('| numero di punti che compongono la funzione d\'onda,              |'), nl,
    write ('| un valore alto permette una simulazione piu\' accurata           |'), nl,
    write ('| passo temporale, determina la distanza temporale                 |'), nl,
    write ('| tra due punti di simulazione, un valore basso                    |'), nl,
    write ('| permette una simulazione piu\' accurata                          |'), nl,
    write ('--------------------------------------------------------------------'), nl,
    write('Digita il numero di punti totali della funzione di onda: '),
    acquisisci_dato(NX),
    write('Digita la lunghezza del passo temporale della funzione di onda: '),
    acquisisci_dato(DT),
    main_convezione(DT, NX, CONV),
    mostra_dati_lista(CONV),

    write ('--------------------------------------------------------------------'), nl,
    write ('|Calcolo dell\'equazione di Burgers a una dimensione               |'), nl,
    write ('| Parametri iniziali:                                              |'), nl,
    write ('| limite superiore del dominio spaziale    = 2.0 * pi,             |'), nl,
    write ('| limite inferiore del dominio spaziale    = 0.0.                  |'), nl, 
    write ('| Parametri di simulazione:                                        |'), nl,
    write ('| tempo finale di simulazione              = 0.6s,                 |'), nl, 
    write ('| coefficiente di diffusione               = 1.0m^2/s,             |'), nl, 
    write ('| costante di Courant-Friedrichs-Lewy      = 0.1.                  |'), nl, 
    write ('| Parametri richiesti all\'utente:                                 |'), nl, 
    write ('| numero di punti che compongono la funzione d\'onda               |'), nl,
    write ('--------------------------------------------------------------------'), nl,
    write('Digita il numero di punti totali della funzione di onda: '), 
    acquisisci_dato(NX),
    main_burgers(NX, BURG),
    mostra_dati_lista(BURG),
